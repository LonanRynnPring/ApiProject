<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApprenticeWebAPI</name>
    </assembly>
    <members>
        <member name="T:ApprenticeWebAPI.ApplicationLayer.AccountsLogic">
            <summary>
            The accounts logic implementation.
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.ApplicationLayer.AccountsLogic._accountsRepository">
            <summary>
            Account repository interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AccountsLogic.#ctor(ApprenticeWebAPI.DataAccessLayer.Interfaces.IAccountsRepository)">
            <summary>
            Constructor.
            </summary>
            <param name="accountsRepository">The accounts repository.</param>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AccountsLogic.CreateAccount(ApprenticeWebAPI.Models.Dto.AccountRequestDto)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AccountsLogic.RetrieveAccounts">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AccountsLogic.RetrieveAccount(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AccountsLogic.UpdateAccount(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.AccountRequestDto})">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AccountsLogic.DeleteAccount(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AccountsLogic.MapToAccountResponseDto(ApprenticeWebAPI.Models.Entity.AccountsEntity)">
            <summary>
            
            </summary>
            <param name="dataIn"></param>
            <returns></returns>
        </member>
        <member name="T:ApprenticeWebAPI.ApplicationLayer.AddressesLogic">
            <summary>
            The address logic implementation.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AddressesLogic.CreateAddress(System.Int32,ApprenticeWebAPI.Models.Dto.AddressRequestDto)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AddressesLogic.RetrieveAccountAddresses(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AddressesLogic.RetrieveAddressById(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AddressesLogic.UpdateAddress(System.Int32,System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.AddressRequestDto})">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AddressesLogic.DeleteAddress(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.AddressesLogic.GetAddresses">
            <summary>
            Temporary method for returning dummy data.
            </summary>
            <returns>A list of dummy data addresses.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.ApplicationLayer.CardsLogic">
            <summary>
            The card logic implementation.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.CardsLogic.CreateCardForAccount(System.Int32,ApprenticeWebAPI.Models.Dto.CardRequestDto)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.CardsLogic.RetrieveAccountCards(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.CardsLogic.RetrieveAccountCardById(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.CardsLogic.UpdateCard(System.Int32,System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.CardRequestDto})">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.CardsLogic.DeleteCard(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.CardsLogic.GetCards">
            <summary>
            Temporary method for returning dummy data.
            </summary>
            <returns>A list of dummy data cards.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.ApplicationLayer.ExampleLogic">
            <summary>
            The example logic implementation.
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.ApplicationLayer.ExampleLogic._examplesRepository">
            <summary>
            Example repository interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.ExampleLogic.#ctor(ApprenticeWebAPI.DataAccessLayer.Interfaces.IExamplesRepository)">
            <summary>
            Constructor.
            </summary>
            <param name="examplesRepository">The example repository.</param>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.ExampleLogic.CreateExample(ApprenticeWebAPI.Models.Dto.ExampleRequestDto)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.ExampleLogic.GetExamples">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.ExampleLogic.GetExampleById(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.ExampleLogic.UpdateExample(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.ExampleRequestDto})">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.ExampleLogic.DeleteExample(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAccountsLogic">
            <summary>
            The accounts logic interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAccountsLogic.CreateAccount(ApprenticeWebAPI.Models.Dto.AccountRequestDto)">
            <summary>
            Method for creating an account.
            </summary>
            <param name="accountRequestDto">The account request Dto.</param>
            <returns>An account response Dto.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAccountsLogic.RetrieveAccounts">
            <summary>
            Method for retrieving all accounts.
            </summary>
            <returns>A collection of accounts.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAccountsLogic.RetrieveAccount(System.Int32)">
            <summary>
            Method for retrieving a single account.
            </summary>
            <param name="accountId">The Id of the account we want to retrieve.</param>
            <returns>The account.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAccountsLogic.UpdateAccount(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.AccountRequestDto})">
            <summary>
            Method for updating an account.
            </summary>
            <param name="accountId">The Id of the account we want to retrieve.</param>
            <param name="patchRequest">The account patch request.</param>
            <returns>The updated account.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAccountsLogic.DeleteAccount(System.Int32)">
            <summary>
            Method for deleting an account.
            </summary>
            <param name="accountId">The Id of the account we want to retrieve.</param>
            <returns>The status of the deletion of the account.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAddressesLogic">
            <summary>
            The address logic interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAddressesLogic.CreateAddress(System.Int32,ApprenticeWebAPI.Models.Dto.AddressRequestDto)">
            <summary>
            Method for creating an address for an account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="addressRequestDto">The address request Dto.</param>
            <returns>An address response Dto.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAddressesLogic.RetrieveAccountAddresses(System.Int32)">
            <summary>
            Method for retrieving account addresses.
            </summary>
            <param name="accountId">The Id of the account we want to retrieve addresses for.</param>
            <returns>The account's addresses.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAddressesLogic.RetrieveAddressById(System.Int32,System.Int32)">
            <summary>
            Method for retrieving an address.
            </summary>
            <param name="accountId">The Id of the account we want to retrieve address for.</param>
            <param name="addressId">The Id of the address to retrieve.</param>
            <returns>The address.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAddressesLogic.UpdateAddress(System.Int32,System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.AddressRequestDto})">
            <summary>
            Method for updating an address.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="addressId">The Id of the address to update.</param>
            <param name="patchRequest">The address patch request.</param>
            <returns>The updated address.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IAddressesLogic.DeleteAddress(System.Int32,System.Int32)">
            <summary>
            Method for deleting an address.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="addressId">The Id of the address to delete.</param>
            <returns>The status of the deletion of the address.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.ApplicationLayer.Interfaces.ICardsLogic">
            <summary>
            The card logic interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.ICardsLogic.CreateCardForAccount(System.Int32,ApprenticeWebAPI.Models.Dto.CardRequestDto)">
            <summary>
            Method for creating a card for an account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cardRequestDto">The card creation request Dto.</param>
            <returns>The card creation response Dto.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.ICardsLogic.RetrieveAccountCards(System.Int32)">
            <summary>
            Method for retrieving account cards.
            </summary>
            <param name="accountId">The Id of the account we want to retrieve cards for.</param>
            <returns>The account's cards.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.ICardsLogic.RetrieveAccountCardById(System.Int32,System.Int32)">
            <summary>
            Method for retrieving a card.
            </summary>
            <param name="accountId">The Id of the account we want to retrieve card for.</param>
            <param name="cardId">The Id of the card to retrieve.</param>
            <returns>The card.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.ICardsLogic.UpdateCard(System.Int32,System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.CardRequestDto})">
            <summary>
            Method for updating a card.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="cardId">The Id of the card to update.</param>
            <param name="patchRequest">The card patch request.</param>
            <returns>The updated card.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.ICardsLogic.DeleteCard(System.Int32,System.Int32)">
            <summary>
            Method for deleting a card.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="cardId">The Id of the card to delete.</param>
            <returns>The status of the deletion of the card.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.ApplicationLayer.Interfaces.IExampleLogic">
            <summary>
            The example logic interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IExampleLogic.CreateExample(ApprenticeWebAPI.Models.Dto.ExampleRequestDto)">
            <summary>
            Method for creating an example
            </summary>
            <param name="exampleRequestDto">The example request Dto.</param>
            <returns>The example response Dto.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IExampleLogic.GetExamples">
            <summary>
            Method for getting examples.
            </summary>
            <returns>The example response Dtos.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IExampleLogic.GetExampleById(System.Int32)">
            <summary>
            Method for getting an example by Id.
            </summary>
            <param name="exampleId">The example Id.</param>
            <returns>The example.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IExampleLogic.UpdateExample(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.ExampleRequestDto})">
            <summary>
            Method for updating an example.
            </summary>
            <param name="exampleId">The example Id.</param>
            <param name="patchRequest">The example patch request.</param>
            <returns>The example.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.ApplicationLayer.Interfaces.IExampleLogic.DeleteExample(System.Int32)">
            <summary>
            Method for deleting an example.
            </summary>
            <param name="exampleId">The example Id.</param>
            <returns>The status of the deletion of the example.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.Controllers.AccountsController">
            <summary>
            Account API Controller
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.Controllers.AccountsController._accountsLogic">
            <summary>
            Accounts logic interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AccountsController.#ctor(ApprenticeWebAPI.ApplicationLayer.Interfaces.IAccountsLogic)">
            <summary>
            Constructor.
            </summary>
            <param name="accountsLogic">The account logic.</param>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AccountsController.CreateAccount(ApprenticeWebAPI.Models.Dto.AccountRequestDto)">
            <summary>
            Endpoint for creating an account.
            </summary>
            <param name="accountRequestDto">The account creation request body.</param>
            <returns>The account creation response.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AccountsController.RetrieveAccounts">
            <summary>
            Endpoint for retrieving accounts.
            </summary>
            <returns>A collection of accounts.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AccountsController.RetrieveAccount(System.Int32)">
            <summary>
            Endpoint for retrieving an account.
            </summary>
            <param name="accountId">The Id of the account to retrieve.</param>
            <returns>The account.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AccountsController.UpdateAccount(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.AccountRequestDto})">
            <summary>
            Endpoint for updating an account.
            </summary>
            <param name="accountId">The Id of the account to retrieve.</param>
            <param name="patchRequest">The patch request body.</param>
            <returns>The updated account.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AccountsController.DeleteAccount(System.Int32)">
            <summary>
            Endpoint for deleting an account.
            </summary>
            <param name="accountId">The Id of the account to retrieve.</param>
            <returns>The status of the account deletion.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.Controllers.AddressesController">
            <summary>
            Address API Controller
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.Controllers.AddressesController._addressLogic">
            <summary>
            Address logic interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AddressesController.#ctor(ApprenticeWebAPI.ApplicationLayer.Interfaces.IAddressesLogic)">
            <summary>
            Constructor.
            </summary>
            <param name="addressLogic">The address logic.</param>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AddressesController.CreateAddress(System.Int32,ApprenticeWebAPI.Models.Dto.AddressRequestDto)">
            <summary>
            Endpoint for creating an address for an account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="addressRequestDto">The address creation request body.</param>
            <returns>The address creation response.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AddressesController.RetrieveAccountAddresses(System.Int32)">
            <summary>
            Endpoint for retrieving an account's addresses.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <returns>The account's addresses.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AddressesController.RetrieveAccountAddressById(System.Int32,System.Int32)">
            <summary>
            Endpoint for retrieving a address belonging to an account.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="addressId">The Id of the address.</param>
            <returns>The account's address.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AddressesController.UpdateAccount(System.Int32,System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.AddressRequestDto})">
            <summary>
            Endpoint for updating an address.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="addressId">The Id of the address to update.</param>
            <param name="patchRequest">The patch request body.</param>
            <returns>The updated address.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.AddressesController.DeleteAddress(System.Int32,System.Int32)">
            <summary>
            Endpoint for deleting an address.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="addressId">The Id of the address to delete.</param>
            <returns>The status of the address deletion.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.Controllers.CardsController">
            <summary>
            Cards API Controller
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.Controllers.CardsController._cardLogic">
            <summary>
            Card logic interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.CardsController.#ctor(ApprenticeWebAPI.ApplicationLayer.Interfaces.ICardsLogic)">
            <summary>
            Constructor.
            </summary>
            <param name="cardLogic">The card logic.</param>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.CardsController.CreateAddress(System.Int32,ApprenticeWebAPI.Models.Dto.CardRequestDto)">
            <summary>
            Endpoint for creating a card for an account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cardRequestDto">The card creation request body.</param>
            <returns>The card creation response.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.CardsController.RetrieveAccountCards(System.Int32)">
            <summary>
            Endpoint for retrieving an account's cards.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <returns>The account's cards.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.CardsController.RetrieveAccountAddressById(System.Int32,System.Int32)">
            <summary>
            Endpoint for retrieving a card belonging to an account.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="cardId">The Id of the card.</param>
            <returns>The account's card.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.CardsController.UpdateAccount(System.Int32,System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.CardRequestDto})">
            <summary>
            Endpoint for updating a card.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="cardId">The Id of the card to update.</param>
            <param name="patchRequest">The patch request body.</param>
            <returns>The updated card.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.CardsController.DeleteAddress(System.Int32,System.Int32)">
            <summary>
            Endpoint for deleting a card.
            </summary>
            <param name="accountId">The Id of the account.</param>
            <param name="cardId">The Id of the card to delete.</param>
            <returns>The status of the card deletion.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.Controllers.ExamplesController">
            <summary>
            Example API Controller
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.Controllers.ExamplesController._exampleLogic">
            <summary>
            Example logic interface.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.ExamplesController.#ctor(ApprenticeWebAPI.ApplicationLayer.Interfaces.IExampleLogic)">
            <summary>
            Constructor.
            </summary>
            <param name="exampleLogic">The example logic.</param>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.ExamplesController.CreateExample(ApprenticeWebAPI.Models.Dto.ExampleRequestDto)">
            <summary>
            Endpoint for creating an example.
            </summary>
            <param name="exampleRequestDto">The example creation request body.</param>
            <returns>The example creation response.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.ExamplesController.GetExamples">
            <summary>
            Endpoint for getting examples.
            </summary>
            <returns>The example retrieval response.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.ExamplesController.GetExampleById(System.Int32)">
            <summary>
            Endpoint for getting an example by Id.
            </summary>
            <returns>The example retrieval response.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.ExamplesController.UpdateAccount(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ApprenticeWebAPI.Models.Dto.ExampleRequestDto})">
            <summary>
            Endpoint for updating an example.
            </summary>
            <param name="exampleId">The Id of the example to retrieve.</param>
            <param name="patchRequest">The patch request body.</param>
            <returns>The updated example.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Controllers.ExamplesController.DeleteExample(System.Int32)">
            <summary>
            Endpoint for deleting an example.
            </summary>
            <param name="exampleId">The Id of the example to retrieve.</param>
            <returns>The status of the example deletion.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.DataAccessLayer.AccountsRepository">
            <summary>
            Class for the account repository implementation.
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.DataAccessLayer.AccountsRepository._dataHelper">
            <summary>
            IDataHelper interface.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.DataAccessLayer.AccountsRepository.Configuration">
            <summary>
            The configuration
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.AccountsRepository.#ctor(ApprenticeWebAPI.Utility.Interfaces.IDataHelper,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Contructor.
            </summary>
            <param name="dataHelper">The data helper.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.AccountsRepository.CreateAccount(System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.AccountsRepository.GetAccount">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.AccountsRepository.GetAccountById(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.AccountsRepository.UpdateAccount(System.Int32,System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.AccountsRepository.DeleteAccount(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:ApprenticeWebAPI.DataAccessLayer.ExamplesRepository">
            <summary>
            Class for the example repository implementation.
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.DataAccessLayer.ExamplesRepository._dataHelper">
            <summary>
            IDataHelper interface.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.DataAccessLayer.ExamplesRepository.Configuration">
            <summary>
            The configuration
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.ExamplesRepository.#ctor(ApprenticeWebAPI.Utility.Interfaces.IDataHelper,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Contructor.
            </summary>
            <param name="dataHelper">The data helper.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.ExamplesRepository.CreateExample(System.String)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.ExamplesRepository.GetExamples">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.ExamplesRepository.GetExampleById(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.ExamplesRepository.UpdateExample(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.ExamplesRepository.DeleteExample(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:ApprenticeWebAPI.DataAccessLayer.Interfaces.IAccountsRepository">
            <summary>
            Interface for the accounts repository.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IAccountsRepository.CreateAccount(System.String,System.String,System.String,System.String)">
            <summary>
            Method for creating an account.
            </summary>
            <param name="firstName">The accounts first name.</param>
            <param name="surname">The accounts surname.</param>
            <param name="title">The accounts title.</param>
            <param name="email">The accounts email.</param>
            <returns>The Id of the new account.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IAccountsRepository.GetAccount">
            <summary>
            Method for getting all accounts.
            </summary>
            <returns>The collection of accounts.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IAccountsRepository.GetAccountById(System.Int32)">
            <summary>
            Method for getting an account by Id.
            </summary>
            <param name="accountId">The accounts Id.</param>
            <returns>The account.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IAccountsRepository.UpdateAccount(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Method for updating an account.
            </summary>
            <param name="accountId">The accounts Id.</param>
            <param name="firstName">The accounts new first name.</param>
            <param name="surname">The accounts new surname.</param>
            <param name="title">The accounts new title.</param>
            <param name="email">The accounts new email.</param>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IAccountsRepository.DeleteAccount(System.Int32)">
            <summary>
            Method for deleting an account.
            </summary>
            <param name="accountId">The account Id.</param>
        </member>
        <member name="T:ApprenticeWebAPI.DataAccessLayer.Interfaces.IExamplesRepository">
            <summary>
            Interface for the examples repository.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IExamplesRepository.CreateExample(System.String)">
            <summary>
            Method for creating an example.
            </summary>
            <param name="value">The example value.</param>
            <returns>The Id of the new example.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IExamplesRepository.GetExamples">
            <summary>
            Method for getting all examples.
            </summary>
            <returns>The collection of examples.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IExamplesRepository.GetExampleById(System.Int32)">
            <summary>
            Method for getting an example by Id.
            </summary>
            <param name="exampleId">The example Id.</param>
            <returns>The example.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IExamplesRepository.UpdateExample(System.Int32,System.String)">
            <summary>
            Method for updating an example.
            </summary>
            <param name="exampleId">The example Id.</param>
            <param name="value">The new example value.</param>
        </member>
        <member name="M:ApprenticeWebAPI.DataAccessLayer.Interfaces.IExamplesRepository.DeleteExample(System.Int32)">
            <summary>
            Method for deleting an example.
            </summary>
            <param name="exampleId">The example Id.</param>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Dto.AccountRequestDto">
            <summary>
            The account request Dto
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountRequestDto.FirstName">
            <summary>
            The first name.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountRequestDto.Surname">
            <summary>
            The surname.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountRequestDto.Title">
            <summary>
            The title.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountRequestDto.Email">
            <summary>
            The email.
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Dto.AccountResponseDto">
            <summary>
            The account response Dto.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountResponseDto.AccountId">
            <summary>
            The account Id.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountResponseDto.FirstName">
            <summary>
            The first name.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountResponseDto.Surname">
            <summary>
            The surname.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountResponseDto.Title">
            <summary>
            The title.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountResponseDto.Email">
            <summary>
            The email.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountResponseDto.DateCreated">
            <summary>
            The date created.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AccountResponseDto.DateLastUpdated">
            <summary>
            The date last updated.
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Dto.AddressRequestDto">
            <summary>
            The address request Dto.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressRequestDto.HouseNumber">
            <summary>
            The house number.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressRequestDto.Street">
            <summary>
            The street.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressRequestDto.TownCity">
            <summary>
            The town/city.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressRequestDto.County">
            <summary>
            The county.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressRequestDto.PostCode">
            <summary>
            The postcode.
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Dto.AddressResponseDto">
            <summary>
            The address response Dto.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressResponseDto.AddressId">
            <summary>
            The address Id
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressResponseDto.AccountId">
            <summary>
            The account Id
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressResponseDto.HouseNumber">
            <summary>
            The house number.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressResponseDto.Street">
            <summary>
            The street.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressResponseDto.TownCity">
            <summary>
            The town/city.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressResponseDto.County">
            <summary>
            The county.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.AddressResponseDto.PostCode">
            <summary>
            The postcode.
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Dto.CardRequestDto">
            <summary>
            The card requrest Dto.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.CardRequestDto.CardNumber">
            <summary>
            The card number.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.CardRequestDto.Bank">
            <summary>
            The bank.
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Dto.CardResponseDto">
            <summary>
            The card response Dto.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.CardResponseDto.CardId">
            <summary>
            The card Id.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.CardResponseDto.AccountId">
            <summary>
            The account Id.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.CardResponseDto.CardNumber">
            <summary>
            The card number.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.CardResponseDto.Bank">
            <summary>
            The bank.
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Dto.ExampleRequestDto">
            <summary>
            The example request Dto
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.ExampleRequestDto.Value">
            <summary>
            The example value.
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Dto.ExampleResponseDto">
            <summary>
            The example response Dto
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.ExampleResponseDto.ExampleId">
            <summary>
            The example Id.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Dto.ExampleResponseDto.Value">
            <summary>
            The example value.
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Entity.AccountsEntity">
            <summary>
            This is the accounts entitiy used for the repository
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.AccountsEntity.AccountId">
            <summary>
            The account Id.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.AccountsEntity.FirstName">
            <summary>
            The first name.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.AccountsEntity.Surname">
            <summary>
            The surname.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.AccountsEntity.Title">
            <summary>
            The title.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.AccountsEntity.Email">
            <summary>
            The email.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.AccountsEntity.DateCreated">
            <summary>
            The date created.
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.AccountsEntity.DateLastUpdated">
            <summary>
            The date last updated.
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Models.Entity.PatchRequest">
            <summary>
            Copy of MPP Core Patch Request object
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.PatchRequest.Action">
            <summary>
            The action of the payment detail parameter change
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.PatchRequest.ParameterName">
            <summary>
            The name of the parameter being changed
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.PatchRequest.Value">
            <summary>
            The new payment detail parameter value
            </summary>
        </member>
        <member name="P:ApprenticeWebAPI.Models.Entity.PatchRequest.InvalidAction">
            <summary>
            If the action is not set then this holds the original action type
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Program">
            <summary>
            Entry point class.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Program.Main(System.String[])">
            <summary>
            Entry point method.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:ApprenticeWebAPI.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Method for creating web host builder.
            </summary>
            <param name="args">Arguements.</param>
            <returns>The web host builder.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.Startup">
            <summary>
            The startup class.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Start up constructor
            </summary>
            <param name="configuration">configuration interface</param>
        </member>
        <member name="P:ApprenticeWebAPI.Startup.Configuration">
            <summary>
            Configuration interface
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">IServiceCollection Interface</param>
        </member>
        <member name="M:ApprenticeWebAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:ApprenticeWebAPI.Utility.Banks">
            <summary>
            The enum for available payment card banks.
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.Utility.Banks.Barclays">
            <summary>
            Barclays
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.Utility.Banks.HSBC">
            <summary>
            HSBC
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Utility.DataHelper">
            <summary>
            Copy of the MPP Core class for the data helper implementation.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Utility.DataHelper.Execute``1(System.Action{System.Data.SqlClient.SqlCommand}[])">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.Utility.DataHelper.Execute(System.Action{System.Data.SqlClient.SqlCommand}[])">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.Utility.DataHelper.Execute(System.Action{System.Object},System.Action{System.Data.SqlClient.SqlCommand}[])">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.Utility.DataHelper.BindDb(System.String)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.Utility.DataHelper.BindParameters(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.Utility.DataHelper.StoredProc(System.String)">
            <inheritdoc />
        </member>
        <member name="M:ApprenticeWebAPI.Utility.DataHelper.ParseParameters(System.Data.SqlClient.SqlCommand,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Method for parsing stored procedure parameters.
            </summary>
            <param name="cmd">The SQL command.</param>
            <param name="parameters">The dictionary parameters.</param>
        </member>
        <member name="M:ApprenticeWebAPI.Utility.DataHelper.ExecuteTable(System.Data.SqlClient.SqlCommand)">
            <summary>
            Method for retrieving a data table from a SQL command result.
            </summary>
            <param name="cmd">The SQL command</param>
            <returns>The datatable.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.Utility.Interfaces.IDataHelper">
            <summary>
            Copy of the MPP Core data helper.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Utility.Interfaces.IDataHelper.Execute``1(System.Action{System.Data.SqlClient.SqlCommand}[])">
            <summary>
            Executes the specified command sequence.
            Call this one when you need a DataSet, DataTable, an instance of T where T implements a private constructor that takes a DataRow to instantiate itself from
            or the affected row count. The affected row count is only returned when the query returns the affected row count as a single scalar value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="commandSequence">The command sequence.</param>
            <returns></returns>
        </member>
        <member name="M:ApprenticeWebAPI.Utility.Interfaces.IDataHelper.Execute(System.Action{System.Data.SqlClient.SqlCommand}[])">
            <summary>
            Executes the specified command sequence. 
            Call this one when you need the affected row count
            </summary>
            <param name="commandSequence">The command sequence.</param>
            <returns></returns>
        </member>
        <member name="M:ApprenticeWebAPI.Utility.Interfaces.IDataHelper.Execute(System.Action{System.Object},System.Action{System.Data.SqlClient.SqlCommand}[])">
            <summary>
            Executes the specified command sequence. 
            Call this one when you need the affected row count
            </summary>
            <param name="returnValue">An action that is called with the return value from the executed T-SQL.</param>
            <param name="commandSequence">The command sequence.</param>
            <returns>An integer which is the result of the execution.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Utility.Interfaces.IDataHelper.BindDb(System.String)">
            <summary>
            This property defines an action that binds an arbitrary database.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Utility.Interfaces.IDataHelper.BindParameters(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            This method defines an action that binds parameters as a dictionary.
            </summary>
            <param name="parameterDictionary">The dictionary of parameters to bind</param>
            <returns>A SqlCommand action.</returns>
        </member>
        <member name="M:ApprenticeWebAPI.Utility.Interfaces.IDataHelper.StoredProc(System.String)">
            <summary>
            This method creates a SQL Action that binds a stored procedure to a SQL Command.
            </summary>
            <param name="storedProcedureName">The stored procedure to bind.</param>
            <returns>A SqlCommand action.</returns>
        </member>
        <member name="T:ApprenticeWebAPI.Utility.PatchOperations">
            <summary>
            The enum for available PATCH operations.
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.Utility.PatchOperations.Add">
            <summary>
            The add operation
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.Utility.PatchOperations.Replace">
            <summary>
            The replace operation
            </summary>
        </member>
        <member name="F:ApprenticeWebAPI.Utility.PatchOperations.Remove">
            <summary>
            The remove operation
            </summary>
        </member>
        <member name="T:ApprenticeWebAPI.Utility.PatchRequestConverter`1">
            <summary>
            Class for converting PATCH requests.
            </summary>
        </member>
        <member name="M:ApprenticeWebAPI.Utility.PatchRequestConverter`1.GeneratePatchRequestList(Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`0})">
            <summary>
            Method for generating a list of patch requests from a PATCH document.
            </summary>
            <param name="patchRequest">The original PATCH document request.</param>
            <returns>A list of PATCH requests.</returns>
        </member>
    </members>
</doc>
